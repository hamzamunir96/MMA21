{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [],
   "source": [
    "# [Hamza, Munir]\n",
    "# [Student number]\n",
    "# [MMA]\n",
    "# MMA 869\n",
    "# [15/08/2020]\n",
    "\n",
    "\n",
    "# Answer to Question 1, Part 1\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\hp\\anaconda3\\lib\\site-packages\\sklearn\\utils\\deprecation.py:144: FutureWarning: The sklearn.metrics.classification module is  deprecated in version 0.22 and will be removed in version 0.24. The corresponding classes / functions should instead be imported from sklearn.metrics. Anything that cannot be imported from sklearn.metrics is now part of the private API.\n",
      "  warnings.warn(message, FutureWarning)\n"
     ]
    }
   ],
   "source": [
    "#Loading Libraries \n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "\n",
    "import matplotlib as mpl\n",
    "import matplotlib.pyplot as plt\n",
    "from mpl_toolkits.mplot3d import Axes3D\n",
    "import seaborn as sns \n",
    "\n",
    "from sklearn.metrics import silhouette_score, silhouette_samples\n",
    "import sklearn.metrics\n",
    "from sklearn.preprocessing import StandardScaler\n",
    "from sklearn.cluster import KMeans, DBSCAN, AgglomerativeClustering\n",
    "from sklearn.mixture import GaussianMixture\n",
    "\n",
    "import pandas_profiling\n",
    "\n",
    "import itertools\n",
    "\n",
    "import scipy\n",
    "\n",
    "from yellowbrick.cluster import SilhouetteVisualizer, InterclusterDistance, KElbowVisualizer\n",
    "\n",
    "\n",
    "\n",
    "from IPython.core.interactiveshell import InteractiveShell\n",
    "InteractiveShell.ast_node_interactivity = \"all\"\n",
    "\n",
    "# This will ensure that matplotlib figures don't get cut off when saving with savefig()\n",
    "from matplotlib import rcParams\n",
    "rcParams.update({'figure.autolayout': True})"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Part (a). Load, Clean & Preprocess the Data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "df = pd.read_csv(\"https://raw.githubusercontent.com/stepthom/sandbox/master/data/jewelry_customers.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "df_new = pd.read_csv(\"https://raw.githubusercontent.com/stepthom/sandbox/master/data/jewelry_customers.csv\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Data Explorartion/Cleaning "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['Age', 'Income', 'SpendingScore', 'Savings']"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/plain": [
       "(505, 4)"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 505 entries, 0 to 504\n",
      "Data columns (total 4 columns):\n",
      " #   Column         Non-Null Count  Dtype  \n",
      "---  ------         --------------  -----  \n",
      " 0   Age            505 non-null    int64  \n",
      " 1   Income         505 non-null    int64  \n",
      " 2   SpendingScore  505 non-null    float64\n",
      " 3   Savings        505 non-null    float64\n",
      "dtypes: float64(2), int64(2)\n",
      "memory usage: 15.9 KB\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>count</th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "      <th>min</th>\n",
       "      <th>25%</th>\n",
       "      <th>50%</th>\n",
       "      <th>75%</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Age</th>\n",
       "      <td>505.0</td>\n",
       "      <td>59.019802</td>\n",
       "      <td>24.140043</td>\n",
       "      <td>17.0</td>\n",
       "      <td>34.000000</td>\n",
       "      <td>59.000000</td>\n",
       "      <td>85.000000</td>\n",
       "      <td>97.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Income</th>\n",
       "      <td>505.0</td>\n",
       "      <td>75513.291089</td>\n",
       "      <td>35992.922184</td>\n",
       "      <td>12000.0</td>\n",
       "      <td>34529.000000</td>\n",
       "      <td>75078.000000</td>\n",
       "      <td>107100.000000</td>\n",
       "      <td>142000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>SpendingScore</th>\n",
       "      <td>505.0</td>\n",
       "      <td>0.505083</td>\n",
       "      <td>0.259634</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.304792</td>\n",
       "      <td>0.368215</td>\n",
       "      <td>0.768279</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Savings</th>\n",
       "      <td>505.0</td>\n",
       "      <td>11862.455867</td>\n",
       "      <td>4949.229253</td>\n",
       "      <td>0.0</td>\n",
       "      <td>6828.709702</td>\n",
       "      <td>14209.932802</td>\n",
       "      <td>16047.268331</td>\n",
       "      <td>20000.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "               count          mean           std      min           25%  \\\n",
       "Age            505.0     59.019802     24.140043     17.0     34.000000   \n",
       "Income         505.0  75513.291089  35992.922184  12000.0  34529.000000   \n",
       "SpendingScore  505.0      0.505083      0.259634      0.0      0.304792   \n",
       "Savings        505.0  11862.455867   4949.229253      0.0   6828.709702   \n",
       "\n",
       "                        50%            75%       max  \n",
       "Age               59.000000      85.000000      97.0  \n",
       "Income         75078.000000  107100.000000  142000.0  \n",
       "SpendingScore      0.368215       0.768279       1.0  \n",
       "Savings        14209.932802   16047.268331   20000.0  "
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Age</th>\n",
       "      <th>Income</th>\n",
       "      <th>SpendingScore</th>\n",
       "      <th>Savings</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>58</td>\n",
       "      <td>77769</td>\n",
       "      <td>0.791329</td>\n",
       "      <td>6559.829923</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>59</td>\n",
       "      <td>81799</td>\n",
       "      <td>0.791082</td>\n",
       "      <td>5417.661426</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>62</td>\n",
       "      <td>74751</td>\n",
       "      <td>0.702657</td>\n",
       "      <td>9258.992965</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>59</td>\n",
       "      <td>74373</td>\n",
       "      <td>0.765680</td>\n",
       "      <td>7346.334504</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>87</td>\n",
       "      <td>17760</td>\n",
       "      <td>0.348778</td>\n",
       "      <td>16869.507130</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>29</td>\n",
       "      <td>131578</td>\n",
       "      <td>0.847034</td>\n",
       "      <td>3535.514352</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>54</td>\n",
       "      <td>76500</td>\n",
       "      <td>0.785198</td>\n",
       "      <td>6878.884249</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>87</td>\n",
       "      <td>42592</td>\n",
       "      <td>0.355290</td>\n",
       "      <td>18086.287158</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>83</td>\n",
       "      <td>34384</td>\n",
       "      <td>0.324719</td>\n",
       "      <td>14783.379086</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>84</td>\n",
       "      <td>27693</td>\n",
       "      <td>0.367063</td>\n",
       "      <td>17879.558906</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>85</td>\n",
       "      <td>111389</td>\n",
       "      <td>0.036795</td>\n",
       "      <td>16009.237763</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>36</td>\n",
       "      <td>99780</td>\n",
       "      <td>0.265433</td>\n",
       "      <td>16398.401333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>30</td>\n",
       "      <td>99949</td>\n",
       "      <td>0.344679</td>\n",
       "      <td>13621.639726</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>31</td>\n",
       "      <td>107963</td>\n",
       "      <td>0.290509</td>\n",
       "      <td>13407.081391</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>61</td>\n",
       "      <td>71933</td>\n",
       "      <td>0.844107</td>\n",
       "      <td>8022.208541</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>92</td>\n",
       "      <td>122879</td>\n",
       "      <td>0.060724</td>\n",
       "      <td>13709.670275</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>55</td>\n",
       "      <td>71621</td>\n",
       "      <td>0.753343</td>\n",
       "      <td>7780.589914</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>87</td>\n",
       "      <td>31481</td>\n",
       "      <td>0.317424</td>\n",
       "      <td>16180.688082</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>82</td>\n",
       "      <td>33636</td>\n",
       "      <td>0.371783</td>\n",
       "      <td>17866.833598</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>88</td>\n",
       "      <td>120678</td>\n",
       "      <td>0.063273</td>\n",
       "      <td>14264.473847</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    Age  Income  SpendingScore       Savings\n",
       "0    58   77769       0.791329   6559.829923\n",
       "1    59   81799       0.791082   5417.661426\n",
       "2    62   74751       0.702657   9258.992965\n",
       "3    59   74373       0.765680   7346.334504\n",
       "4    87   17760       0.348778  16869.507130\n",
       "5    29  131578       0.847034   3535.514352\n",
       "6    54   76500       0.785198   6878.884249\n",
       "7    87   42592       0.355290  18086.287158\n",
       "8    83   34384       0.324719  14783.379086\n",
       "9    84   27693       0.367063  17879.558906\n",
       "10   85  111389       0.036795  16009.237763\n",
       "11   36   99780       0.265433  16398.401333\n",
       "12   30   99949       0.344679  13621.639726\n",
       "13   31  107963       0.290509  13407.081391\n",
       "14   61   71933       0.844107   8022.208541\n",
       "15   92  122879       0.060724  13709.670275\n",
       "16   55   71621       0.753343   7780.589914\n",
       "17   87   31481       0.317424  16180.688082\n",
       "18   82   33636       0.371783  17866.833598\n",
       "19   88  120678       0.063273  14264.473847"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Age</th>\n",
       "      <th>Income</th>\n",
       "      <th>SpendingScore</th>\n",
       "      <th>Savings</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>500</th>\n",
       "      <td>28</td>\n",
       "      <td>101206</td>\n",
       "      <td>0.387441</td>\n",
       "      <td>14936.775389</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>501</th>\n",
       "      <td>93</td>\n",
       "      <td>19934</td>\n",
       "      <td>0.203140</td>\n",
       "      <td>17969.693769</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>502</th>\n",
       "      <td>90</td>\n",
       "      <td>35297</td>\n",
       "      <td>0.355149</td>\n",
       "      <td>16091.401954</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>503</th>\n",
       "      <td>91</td>\n",
       "      <td>20681</td>\n",
       "      <td>0.354679</td>\n",
       "      <td>18401.088445</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>504</th>\n",
       "      <td>89</td>\n",
       "      <td>30267</td>\n",
       "      <td>0.289310</td>\n",
       "      <td>14386.351880</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     Age  Income  SpendingScore       Savings\n",
       "500   28  101206       0.387441  14936.775389\n",
       "501   93   19934       0.203140  17969.693769\n",
       "502   90   35297       0.355149  16091.401954\n",
       "503   91   20681       0.354679  18401.088445\n",
       "504   89   30267       0.289310  14386.351880"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "list(df)\n",
    "df.shape\n",
    "df.info()\n",
    "df.describe().transpose()\n",
    "df.head(n=20)\n",
    "df.tail()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Missing Value Analysis "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Age              0\n",
       "Income           0\n",
       "SpendingScore    0\n",
       "Savings          0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.isnull().sum()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "There are no missing values in the data set "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [],
   "source": [
    "scaler = StandardScaler()\n",
    "features = ['Income','Age','SpendingScore','Savings']\n",
    "df[features] = scaler.fit_transform(df[features])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Part (b). K-Means Clustering "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "KMeans(n_clusters=5, random_state=0)"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/plain": [
       "66.51111374859076"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "k_means = KMeans(n_clusters = 5, init = 'k-means++', max_iter = 300, n_init = 10, random_state=0)\n",
    "k_means.fit(df)\n",
    "k_means.inertia_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([1, 1, 1, 1, 2, 3, 1, 2, 2, 2, 4, 0, 0, 0, 1, 4, 1, 2, 2, 4, 0, 4,\n",
       "       1, 2, 4, 3, 3, 1, 2, 1, 1, 1, 2, 1, 0, 1, 2, 1, 0, 0, 1, 2, 3, 1,\n",
       "       1, 3, 4, 3, 0, 1, 2, 0, 3, 2, 1, 2, 0, 2, 2, 2, 2, 2, 2, 1, 1, 1,\n",
       "       2, 3, 3, 1, 1, 0, 2, 2, 0, 1, 0, 1, 1, 3, 1, 4, 1, 2, 2, 0, 0, 1,\n",
       "       1, 1, 1, 1, 3, 2, 1, 3, 0, 1, 1, 0, 0, 3, 0, 3, 0, 2, 2, 0, 0, 1,\n",
       "       2, 0, 1, 0, 0, 0, 1, 0, 3, 2, 0, 2, 2, 2, 0, 4, 1, 2, 1, 1, 0, 1,\n",
       "       0, 1, 3, 2, 4, 3, 1, 0, 2, 1, 1, 3, 1, 3, 1, 4, 1, 2, 1, 0, 2, 1,\n",
       "       2, 4, 0, 1, 2, 1, 0, 2, 1, 0, 2, 0, 2, 1, 0, 1, 2, 1, 0, 1, 2, 1,\n",
       "       1, 2, 2, 2, 1, 1, 0, 3, 3, 2, 0, 1, 1, 1, 0, 2, 1, 1, 1, 2, 3, 0,\n",
       "       2, 2, 2, 0, 1, 0, 1, 0, 1, 2, 3, 1, 2, 2, 2, 2, 1, 2, 0, 3, 0, 2,\n",
       "       1, 1, 0, 2, 0, 3, 0, 1, 1, 2, 1, 1, 2, 1, 1, 1, 0, 1, 0, 0, 3, 1,\n",
       "       1, 1, 4, 1, 0, 2, 3, 3, 3, 2, 1, 0, 2, 2, 0, 0, 1, 1, 4, 1, 1, 2,\n",
       "       1, 2, 0, 3, 1, 0, 2, 1, 2, 2, 0, 1, 2, 2, 1, 1, 2, 0, 0, 4, 0, 2,\n",
       "       2, 0, 4, 2, 2, 3, 1, 0, 0, 1, 0, 2, 2, 0, 1, 0, 2, 1, 0, 3, 1, 2,\n",
       "       0, 0, 2, 4, 4, 1, 2, 0, 1, 1, 2, 0, 2, 0, 2, 0, 2, 2, 0, 2, 0, 1,\n",
       "       0, 1, 1, 0, 0, 2, 2, 3, 3, 0, 2, 3, 2, 4, 1, 1, 1, 2, 2, 0, 0, 4,\n",
       "       0, 4, 1, 0, 3, 2, 1, 2, 3, 1, 2, 2, 1, 2, 0, 1, 4, 0, 0, 1, 2, 2,\n",
       "       2, 2, 2, 0, 0, 2, 1, 0, 1, 4, 2, 2, 1, 2, 2, 1, 2, 2, 0, 2, 1, 0,\n",
       "       3, 0, 1, 2, 0, 1, 1, 1, 2, 0, 3, 0, 1, 0, 1, 1, 3, 0, 4, 3, 0, 0,\n",
       "       2, 1, 2, 0, 2, 0, 1, 1, 2, 4, 0, 2, 0, 1, 1, 0, 1, 2, 1, 0, 1, 2,\n",
       "       1, 2, 3, 0, 0, 3, 0, 0, 2, 2, 1, 3, 1, 0, 0, 4, 3, 0, 3, 2, 0, 0,\n",
       "       1, 0, 2, 2, 3, 1, 0, 1, 1, 0, 1, 1, 1, 2, 0, 0, 1, 1, 1, 2, 0, 2,\n",
       "       2, 2, 2, 3, 2, 2, 2, 1, 1, 2, 2, 1, 3, 2, 0, 3, 0, 2, 2, 2, 2])"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "k_means.labels_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[-1.08815238,  0.82744102, -0.75240648,  0.6270464 ],\n",
       "       [ 0.03879611, -0.08524639,  1.02721559, -1.00569483],\n",
       "       [ 1.19238486, -1.32510593, -0.67963841,  0.97016358],\n",
       "       [-1.44466803,  1.46050665,  1.51057952, -1.57249636],\n",
       "       [ 1.11876151,  1.23565419, -1.68367042,  0.59588052]])"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Let's look at the centers\n",
    "k_means.cluster_centers_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1600x1000 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.style.use('default');\n",
    "\n",
    "plt.figure(figsize=(16, 10));\n",
    "plt.grid(True);\n",
    "\n",
    "sc = plt.scatter(df.iloc[:, 0], df.iloc[:, 1], s=200, c=k_means.labels_);\n",
    "#plt.scatter(k_means.cluster_centers_[:, 0], k_means.cluster_centers_[:, 1], marker='x', s=500, c=\"black\")\n",
    "plt.title(\"K-Means (K=5)\", fontsize=20);\n",
    "plt.xlabel('Annual Income (K)', fontsize=22);\n",
    "plt.ylabel('Spending Score', fontsize=22);\n",
    "plt.xticks(fontsize=18);\n",
    "plt.yticks(fontsize=18);\n",
    "\n",
    "for label in k_means.labels_:\n",
    "    plt.text(x=k_means.cluster_centers_[label, 0], y=k_means.cluster_centers_[label, 1], s=label, fontsize=32, \n",
    "             horizontalalignment='center', verticalalignment='center', color='black',\n",
    "             bbox=dict(facecolor='white', edgecolor='black', boxstyle='round,pad=0.1', alpha=0.02));\n",
    "\n",
    "plt.savefig('C:/Users/User/Dropbox/My PC (DESKTOP-H6OTOPT)/Desktop/MMA_Courses/MMA 869/Individual assignment/j.png');"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "66.51111374859076"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# WCSS == Inertia\n",
    "k_means.inertia_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.8048976287755765"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.metrics import silhouette_score, silhouette_samples\n",
    "silhouette_score(df, k_means.labels_)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "<Figure size 640x480 with 0 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "from yellowbrick.cluster import SilhouetteVisualizer, InterclusterDistance, KElbowVisualizer\n",
    "\n",
    "visualizer = SilhouetteVisualizer(k_means)\n",
    "visualizer.fit(df)\n",
    "visualizer.poof()\n",
    "\n",
    "fig = visualizer.ax.get_figure()\n",
    "\n",
    "plt.savefig('C:/Users/User/Dropbox/My PC (DESKTOP-H6OTOPT)/Desktop/MMA_Courses/MMA 869/Individual assignment/j.png');"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## HyperParameter Tuning "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "KMeans(n_clusters=1)"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/plain": [
       "KMeans(n_clusters=2)"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/plain": [
       "KMeans(n_clusters=3)"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/plain": [
       "KMeans(n_clusters=4)"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/plain": [
       "KMeans(n_clusters=5)"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/plain": [
       "KMeans(n_clusters=6)"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/plain": [
       "KMeans(n_clusters=7)"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/plain": [
       "KMeans()"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/plain": [
       "KMeans(n_clusters=9)"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "distortions = []\n",
    "K = range(1,10)\n",
    "for k in K:\n",
    "    kmeanModel = KMeans(n_clusters=k)\n",
    "    kmeanModel.fit(df)\n",
    "    distortions.append(kmeanModel.inertia_)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Figure size 1600x800 with 0 Axes>"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x1df7aa78>]"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/plain": [
       "Text(0.5, 0, 'k')"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/plain": [
       "Text(0, 0.5, 'Distortion')"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/plain": [
       "Text(0.5, 1.0, 'The Elbow Method showing the optimal k')"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1600x800 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(16,8))\n",
    "plt.plot(K, distortions, 'bx-')\n",
    "plt.xlabel('k')\n",
    "plt.ylabel('Distortion')\n",
    "plt.title('The Elbow Method showing the optimal k')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [],
   "source": [
    "import tkinter as tk"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Part (c) Summary Statistics for Each Class "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Cluster 0:\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>405</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Age</th>\n",
       "      <td>-1.037472</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Income</th>\n",
       "      <td>0.770100</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>SpendingScore</th>\n",
       "      <td>-0.786483</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Savings</th>\n",
       "      <td>0.664874</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                    405\n",
       "Age           -1.037472\n",
       "Income         0.770100\n",
       "SpendingScore -0.786483\n",
       "Savings        0.664874"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Cluster 1:\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>467</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Age</th>\n",
       "      <td>0.082111</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Income</th>\n",
       "      <td>-0.096957</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>SpendingScore</th>\n",
       "      <td>0.991771</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Savings</th>\n",
       "      <td>-0.998383</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                    467\n",
       "Age            0.082111\n",
       "Income        -0.096957\n",
       "SpendingScore  0.991771\n",
       "Savings       -0.998383"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Cluster 2:\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>335</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Age</th>\n",
       "      <td>1.243160</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Income</th>\n",
       "      <td>-1.350862</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>SpendingScore</th>\n",
       "      <td>-0.690416</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Savings</th>\n",
       "      <td>0.949109</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                    335\n",
       "Age            1.243160\n",
       "Income        -1.350862\n",
       "SpendingScore -0.690416\n",
       "Savings        0.949109"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Cluster 3:\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>95</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Age</th>\n",
       "      <td>-1.410666</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Income</th>\n",
       "      <td>1.541294</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>SpendingScore</th>\n",
       "      <td>1.575637</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Savings</th>\n",
       "      <td>-1.601849</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                     95\n",
       "Age           -1.410666\n",
       "Income         1.541294\n",
       "SpendingScore  1.575637\n",
       "Savings       -1.601849"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Cluster 4:\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>155</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Age</th>\n",
       "      <td>1.118762</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Income</th>\n",
       "      <td>1.117318</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>SpendingScore</th>\n",
       "      <td>-1.724288</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Savings</th>\n",
       "      <td>0.594762</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                    155\n",
       "Age            1.118762\n",
       "Income         1.117318\n",
       "SpendingScore -1.724288\n",
       "Savings        0.594762"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from scipy.spatial import distance\n",
    "\n",
    "for i, label in enumerate(set(k_means.labels_)):    \n",
    "    X_tmp = df[k_means.labels_==label].copy()\n",
    "    \n",
    "    exemplar_idx = distance.cdist([k_means.cluster_centers_[i]], X_tmp).argmin()\n",
    "    exemplar = pd.DataFrame(X_tmp.iloc[exemplar_idx])\n",
    "   \n",
    "    print('\\nCluster {}:'.format(label))\n",
    "    exemplar"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Cluster 0:\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Age</th>\n",
       "      <th>Income</th>\n",
       "      <th>SpendingScore</th>\n",
       "      <th>Savings</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>454</th>\n",
       "      <td>-1.161870</td>\n",
       "      <td>0.901590</td>\n",
       "      <td>-0.504442</td>\n",
       "      <td>0.069791</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>457</th>\n",
       "      <td>-0.996006</td>\n",
       "      <td>0.962051</td>\n",
       "      <td>-0.841685</td>\n",
       "      <td>0.619312</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>460</th>\n",
       "      <td>-1.286268</td>\n",
       "      <td>0.697459</td>\n",
       "      <td>-0.946440</td>\n",
       "      <td>0.739818</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>461</th>\n",
       "      <td>-1.078938</td>\n",
       "      <td>1.143099</td>\n",
       "      <td>-0.709982</td>\n",
       "      <td>0.655710</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>463</th>\n",
       "      <td>-1.286268</td>\n",
       "      <td>0.535322</td>\n",
       "      <td>-0.776811</td>\n",
       "      <td>0.705873</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>468</th>\n",
       "      <td>-1.120404</td>\n",
       "      <td>1.155169</td>\n",
       "      <td>-0.746896</td>\n",
       "      <td>0.495131</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>471</th>\n",
       "      <td>-1.161870</td>\n",
       "      <td>0.714618</td>\n",
       "      <td>-0.774009</td>\n",
       "      <td>1.022407</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>476</th>\n",
       "      <td>-1.078938</td>\n",
       "      <td>0.868912</td>\n",
       "      <td>-0.951075</td>\n",
       "      <td>0.519625</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>477</th>\n",
       "      <td>-1.078938</td>\n",
       "      <td>0.878451</td>\n",
       "      <td>-0.627070</td>\n",
       "      <td>0.613434</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>482</th>\n",
       "      <td>-1.120404</td>\n",
       "      <td>0.915078</td>\n",
       "      <td>-0.839366</td>\n",
       "      <td>0.977675</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>498</th>\n",
       "      <td>-1.203336</td>\n",
       "      <td>0.626207</td>\n",
       "      <td>-0.362296</td>\n",
       "      <td>0.900909</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>500</th>\n",
       "      <td>-1.286268</td>\n",
       "      <td>0.714535</td>\n",
       "      <td>-0.453557</td>\n",
       "      <td>0.621787</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>-1.088152</td>\n",
       "      <td>0.827441</td>\n",
       "      <td>-0.752406</td>\n",
       "      <td>0.627046</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           Age    Income  SpendingScore   Savings\n",
       "454  -1.161870  0.901590      -0.504442  0.069791\n",
       "457  -0.996006  0.962051      -0.841685  0.619312\n",
       "460  -1.286268  0.697459      -0.946440  0.739818\n",
       "461  -1.078938  1.143099      -0.709982  0.655710\n",
       "463  -1.286268  0.535322      -0.776811  0.705873\n",
       "468  -1.120404  1.155169      -0.746896  0.495131\n",
       "471  -1.161870  0.714618      -0.774009  1.022407\n",
       "476  -1.078938  0.868912      -0.951075  0.519625\n",
       "477  -1.078938  0.878451      -0.627070  0.613434\n",
       "482  -1.120404  0.915078      -0.839366  0.977675\n",
       "498  -1.203336  0.626207      -0.362296  0.900909\n",
       "500  -1.286268  0.714535      -0.453557  0.621787\n",
       "mean -1.088152  0.827441      -0.752406  0.627046"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Cluster 1:\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Age</th>\n",
       "      <th>Income</th>\n",
       "      <th>SpendingScore</th>\n",
       "      <th>Savings</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>467</th>\n",
       "      <td>0.082111</td>\n",
       "      <td>-0.096957</td>\n",
       "      <td>0.991771</td>\n",
       "      <td>-0.998383</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>469</th>\n",
       "      <td>0.165043</td>\n",
       "      <td>-0.137199</td>\n",
       "      <td>1.007903</td>\n",
       "      <td>-0.930429</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>470</th>\n",
       "      <td>-0.042287</td>\n",
       "      <td>-0.134529</td>\n",
       "      <td>0.998339</td>\n",
       "      <td>-0.849062</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>472</th>\n",
       "      <td>0.123577</td>\n",
       "      <td>-0.051124</td>\n",
       "      <td>1.123989</td>\n",
       "      <td>-1.450915</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>473</th>\n",
       "      <td>0.040645</td>\n",
       "      <td>-0.334767</td>\n",
       "      <td>0.951579</td>\n",
       "      <td>-0.873509</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>474</th>\n",
       "      <td>0.123577</td>\n",
       "      <td>-0.216432</td>\n",
       "      <td>1.210931</td>\n",
       "      <td>-1.194480</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>478</th>\n",
       "      <td>0.247975</td>\n",
       "      <td>-0.141370</td>\n",
       "      <td>0.739895</td>\n",
       "      <td>-0.989273</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>479</th>\n",
       "      <td>-0.000821</td>\n",
       "      <td>-0.169793</td>\n",
       "      <td>1.445093</td>\n",
       "      <td>-1.086232</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>480</th>\n",
       "      <td>0.247975</td>\n",
       "      <td>-0.119150</td>\n",
       "      <td>1.090334</td>\n",
       "      <td>-0.574015</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>491</th>\n",
       "      <td>-0.042287</td>\n",
       "      <td>-0.143067</td>\n",
       "      <td>1.539992</td>\n",
       "      <td>-0.890089</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>492</th>\n",
       "      <td>0.082111</td>\n",
       "      <td>-0.034243</td>\n",
       "      <td>0.721552</td>\n",
       "      <td>-0.925445</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>495</th>\n",
       "      <td>0.289441</td>\n",
       "      <td>0.042793</td>\n",
       "      <td>0.779483</td>\n",
       "      <td>-1.125742</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>0.038796</td>\n",
       "      <td>-0.085246</td>\n",
       "      <td>1.027216</td>\n",
       "      <td>-1.005695</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           Age    Income  SpendingScore   Savings\n",
       "467   0.082111 -0.096957       0.991771 -0.998383\n",
       "469   0.165043 -0.137199       1.007903 -0.930429\n",
       "470  -0.042287 -0.134529       0.998339 -0.849062\n",
       "472   0.123577 -0.051124       1.123989 -1.450915\n",
       "473   0.040645 -0.334767       0.951579 -0.873509\n",
       "474   0.123577 -0.216432       1.210931 -1.194480\n",
       "478   0.247975 -0.141370       0.739895 -0.989273\n",
       "479  -0.000821 -0.169793       1.445093 -1.086232\n",
       "480   0.247975 -0.119150       1.090334 -0.574015\n",
       "491  -0.042287 -0.143067       1.539992 -0.890089\n",
       "492   0.082111 -0.034243       0.721552 -0.925445\n",
       "495   0.289441  0.042793       0.779483 -1.125742\n",
       "mean  0.038796 -0.085246       1.027216 -1.005695"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Cluster 2:\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Age</th>\n",
       "      <th>Income</th>\n",
       "      <th>SpendingScore</th>\n",
       "      <th>Savings</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>485</th>\n",
       "      <td>1.284626</td>\n",
       "      <td>-1.466499</td>\n",
       "      <td>-0.573590</td>\n",
       "      <td>0.821470</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>486</th>\n",
       "      <td>1.326092</td>\n",
       "      <td>-1.316793</td>\n",
       "      <td>-0.776438</td>\n",
       "      <td>1.132151</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>488</th>\n",
       "      <td>1.367558</td>\n",
       "      <td>-1.579355</td>\n",
       "      <td>-0.683255</td>\n",
       "      <td>0.703620</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>489</th>\n",
       "      <td>1.574888</td>\n",
       "      <td>-1.341656</td>\n",
       "      <td>-0.852659</td>\n",
       "      <td>0.620046</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>490</th>\n",
       "      <td>1.035829</td>\n",
       "      <td>-1.086019</td>\n",
       "      <td>-0.583946</td>\n",
       "      <td>0.950770</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>493</th>\n",
       "      <td>1.367558</td>\n",
       "      <td>-1.098006</td>\n",
       "      <td>-0.648148</td>\n",
       "      <td>1.109584</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>494</th>\n",
       "      <td>1.160228</td>\n",
       "      <td>-1.268291</td>\n",
       "      <td>-0.628164</td>\n",
       "      <td>1.270098</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>497</th>\n",
       "      <td>1.326092</td>\n",
       "      <td>-1.244736</td>\n",
       "      <td>-0.776418</td>\n",
       "      <td>0.734084</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>501</th>\n",
       "      <td>1.409024</td>\n",
       "      <td>-1.545704</td>\n",
       "      <td>-1.164109</td>\n",
       "      <td>1.235201</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>502</th>\n",
       "      <td>1.284626</td>\n",
       "      <td>-1.118447</td>\n",
       "      <td>-0.578054</td>\n",
       "      <td>0.855313</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>503</th>\n",
       "      <td>1.326092</td>\n",
       "      <td>-1.524929</td>\n",
       "      <td>-0.579866</td>\n",
       "      <td>1.322452</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>504</th>\n",
       "      <td>1.243160</td>\n",
       "      <td>-1.258335</td>\n",
       "      <td>-0.831890</td>\n",
       "      <td>0.510463</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>1.192385</td>\n",
       "      <td>-1.325106</td>\n",
       "      <td>-0.679638</td>\n",
       "      <td>0.970164</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           Age    Income  SpendingScore   Savings\n",
       "485   1.284626 -1.466499      -0.573590  0.821470\n",
       "486   1.326092 -1.316793      -0.776438  1.132151\n",
       "488   1.367558 -1.579355      -0.683255  0.703620\n",
       "489   1.574888 -1.341656      -0.852659  0.620046\n",
       "490   1.035829 -1.086019      -0.583946  0.950770\n",
       "493   1.367558 -1.098006      -0.648148  1.109584\n",
       "494   1.160228 -1.268291      -0.628164  1.270098\n",
       "497   1.326092 -1.244736      -0.776418  0.734084\n",
       "501   1.409024 -1.545704      -1.164109  1.235201\n",
       "502   1.284626 -1.118447      -0.578054  0.855313\n",
       "503   1.326092 -1.524929      -0.579866  1.322452\n",
       "504   1.243160 -1.258335      -0.831890  0.510463\n",
       "mean  1.192385 -1.325106      -0.679638  0.970164"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Cluster 3:\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Age</th>\n",
       "      <th>Income</th>\n",
       "      <th>SpendingScore</th>\n",
       "      <th>Savings</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>406</th>\n",
       "      <td>-1.410666</td>\n",
       "      <td>1.263825</td>\n",
       "      <td>1.436486</td>\n",
       "      <td>-1.268526</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>412</th>\n",
       "      <td>-1.576530</td>\n",
       "      <td>1.507698</td>\n",
       "      <td>1.722243</td>\n",
       "      <td>-1.478797</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>415</th>\n",
       "      <td>-1.369200</td>\n",
       "      <td>1.394675</td>\n",
       "      <td>1.625959</td>\n",
       "      <td>-1.167596</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>442</th>\n",
       "      <td>-1.742394</td>\n",
       "      <td>1.689275</td>\n",
       "      <td>1.660880</td>\n",
       "      <td>-1.564668</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>445</th>\n",
       "      <td>-1.452132</td>\n",
       "      <td>1.250143</td>\n",
       "      <td>1.551423</td>\n",
       "      <td>-1.420640</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>451</th>\n",
       "      <td>-1.327734</td>\n",
       "      <td>1.311493</td>\n",
       "      <td>1.561530</td>\n",
       "      <td>-1.548476</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>456</th>\n",
       "      <td>-1.742394</td>\n",
       "      <td>1.343670</td>\n",
       "      <td>1.684540</td>\n",
       "      <td>-1.630882</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>458</th>\n",
       "      <td>-1.286268</td>\n",
       "      <td>1.451326</td>\n",
       "      <td>1.450948</td>\n",
       "      <td>-1.288677</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>466</th>\n",
       "      <td>-1.700928</td>\n",
       "      <td>1.340611</td>\n",
       "      <td>1.162288</td>\n",
       "      <td>-1.505162</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>487</th>\n",
       "      <td>-1.369200</td>\n",
       "      <td>1.320782</td>\n",
       "      <td>1.848446</td>\n",
       "      <td>-1.515115</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>496</th>\n",
       "      <td>-1.535064</td>\n",
       "      <td>1.597305</td>\n",
       "      <td>1.483239</td>\n",
       "      <td>-1.824853</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>499</th>\n",
       "      <td>-1.410666</td>\n",
       "      <td>1.477079</td>\n",
       "      <td>1.201559</td>\n",
       "      <td>-1.405315</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>-1.444668</td>\n",
       "      <td>1.460507</td>\n",
       "      <td>1.510580</td>\n",
       "      <td>-1.572496</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           Age    Income  SpendingScore   Savings\n",
       "406  -1.410666  1.263825       1.436486 -1.268526\n",
       "412  -1.576530  1.507698       1.722243 -1.478797\n",
       "415  -1.369200  1.394675       1.625959 -1.167596\n",
       "442  -1.742394  1.689275       1.660880 -1.564668\n",
       "445  -1.452132  1.250143       1.551423 -1.420640\n",
       "451  -1.327734  1.311493       1.561530 -1.548476\n",
       "456  -1.742394  1.343670       1.684540 -1.630882\n",
       "458  -1.286268  1.451326       1.450948 -1.288677\n",
       "466  -1.700928  1.340611       1.162288 -1.505162\n",
       "487  -1.369200  1.320782       1.848446 -1.515115\n",
       "496  -1.535064  1.597305       1.483239 -1.824853\n",
       "499  -1.410666  1.477079       1.201559 -1.405315\n",
       "mean -1.444668  1.460507       1.510580 -1.572496"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Cluster 4:\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Age</th>\n",
       "      <th>Income</th>\n",
       "      <th>SpendingScore</th>\n",
       "      <th>Savings</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>283</th>\n",
       "      <td>1.284626</td>\n",
       "      <td>1.353181</td>\n",
       "      <td>-1.828737</td>\n",
       "      <td>0.588746</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>288</th>\n",
       "      <td>0.994363</td>\n",
       "      <td>1.163428</td>\n",
       "      <td>-1.347032</td>\n",
       "      <td>0.652110</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>311</th>\n",
       "      <td>1.077295</td>\n",
       "      <td>1.186289</td>\n",
       "      <td>-1.472325</td>\n",
       "      <td>0.605440</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>312</th>\n",
       "      <td>1.201694</td>\n",
       "      <td>1.091677</td>\n",
       "      <td>-1.823122</td>\n",
       "      <td>1.207573</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>343</th>\n",
       "      <td>1.035829</td>\n",
       "      <td>1.104748</td>\n",
       "      <td>-1.682128</td>\n",
       "      <td>0.512529</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>351</th>\n",
       "      <td>1.326092</td>\n",
       "      <td>1.203671</td>\n",
       "      <td>-1.873225</td>\n",
       "      <td>0.441907</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>353</th>\n",
       "      <td>0.745567</td>\n",
       "      <td>1.476272</td>\n",
       "      <td>-1.789902</td>\n",
       "      <td>0.534138</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>368</th>\n",
       "      <td>1.035829</td>\n",
       "      <td>0.975288</td>\n",
       "      <td>-1.642530</td>\n",
       "      <td>0.622034</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>383</th>\n",
       "      <td>1.160228</td>\n",
       "      <td>1.169463</td>\n",
       "      <td>-1.452726</td>\n",
       "      <td>0.432373</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>414</th>\n",
       "      <td>1.201694</td>\n",
       "      <td>1.338748</td>\n",
       "      <td>-1.835384</td>\n",
       "      <td>0.332122</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>427</th>\n",
       "      <td>1.118762</td>\n",
       "      <td>1.358799</td>\n",
       "      <td>-1.947295</td>\n",
       "      <td>0.710311</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>455</th>\n",
       "      <td>1.409024</td>\n",
       "      <td>1.420790</td>\n",
       "      <td>-1.850254</td>\n",
       "      <td>0.456077</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>1.118762</td>\n",
       "      <td>1.235654</td>\n",
       "      <td>-1.683670</td>\n",
       "      <td>0.595881</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           Age    Income  SpendingScore   Savings\n",
       "283   1.284626  1.353181      -1.828737  0.588746\n",
       "288   0.994363  1.163428      -1.347032  0.652110\n",
       "311   1.077295  1.186289      -1.472325  0.605440\n",
       "312   1.201694  1.091677      -1.823122  1.207573\n",
       "343   1.035829  1.104748      -1.682128  0.512529\n",
       "351   1.326092  1.203671      -1.873225  0.441907\n",
       "353   0.745567  1.476272      -1.789902  0.534138\n",
       "368   1.035829  0.975288      -1.642530  0.622034\n",
       "383   1.160228  1.169463      -1.452726  0.432373\n",
       "414   1.201694  1.338748      -1.835384  0.332122\n",
       "427   1.118762  1.358799      -1.947295  0.710311\n",
       "455   1.409024  1.420790      -1.850254  0.456077\n",
       "mean  1.118762  1.235654      -1.683670  0.595881"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "for label in set(k_means.labels_):\n",
    "    print('\\nCluster {}:'.format(label))\n",
    "    X_tmp = df[k_means.labels_==label].copy()\n",
    "    X_tmp.loc['mean'] = X_tmp.mean()\n",
    "    X_tmp.tail(13)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [],
   "source": [
    "df_new['Clusters']= k_means.labels_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Age</th>\n",
       "      <th>Income</th>\n",
       "      <th>SpendingScore</th>\n",
       "      <th>Savings</th>\n",
       "      <th>Clusters</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>58</td>\n",
       "      <td>77769</td>\n",
       "      <td>0.791329</td>\n",
       "      <td>6559.829923</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>59</td>\n",
       "      <td>81799</td>\n",
       "      <td>0.791082</td>\n",
       "      <td>5417.661426</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>62</td>\n",
       "      <td>74751</td>\n",
       "      <td>0.702657</td>\n",
       "      <td>9258.992965</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>59</td>\n",
       "      <td>74373</td>\n",
       "      <td>0.765680</td>\n",
       "      <td>7346.334504</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>87</td>\n",
       "      <td>17760</td>\n",
       "      <td>0.348778</td>\n",
       "      <td>16869.507130</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>500</th>\n",
       "      <td>28</td>\n",
       "      <td>101206</td>\n",
       "      <td>0.387441</td>\n",
       "      <td>14936.775389</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>501</th>\n",
       "      <td>93</td>\n",
       "      <td>19934</td>\n",
       "      <td>0.203140</td>\n",
       "      <td>17969.693769</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>502</th>\n",
       "      <td>90</td>\n",
       "      <td>35297</td>\n",
       "      <td>0.355149</td>\n",
       "      <td>16091.401954</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>503</th>\n",
       "      <td>91</td>\n",
       "      <td>20681</td>\n",
       "      <td>0.354679</td>\n",
       "      <td>18401.088445</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>504</th>\n",
       "      <td>89</td>\n",
       "      <td>30267</td>\n",
       "      <td>0.289310</td>\n",
       "      <td>14386.351880</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>505 rows × 5 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     Age  Income  SpendingScore       Savings  Clusters\n",
       "0     58   77769       0.791329   6559.829923         1\n",
       "1     59   81799       0.791082   5417.661426         1\n",
       "2     62   74751       0.702657   9258.992965         1\n",
       "3     59   74373       0.765680   7346.334504         1\n",
       "4     87   17760       0.348778  16869.507130         2\n",
       "..   ...     ...            ...           ...       ...\n",
       "500   28  101206       0.387441  14936.775389         0\n",
       "501   93   19934       0.203140  17969.693769         2\n",
       "502   90   35297       0.355149  16091.401954         2\n",
       "503   91   20681       0.354679  18401.088445         2\n",
       "504   89   30267       0.289310  14386.351880         2\n",
       "\n",
       "[505 rows x 5 columns]"
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_new"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Clusters</th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "      <th>2</th>\n",
       "      <th>3</th>\n",
       "      <th>4</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th rowspan=\"8\" valign=\"top\">Age</th>\n",
       "      <th>count</th>\n",
       "      <td>126.000000</td>\n",
       "      <td>157.000000</td>\n",
       "      <td>147.000000</td>\n",
       "      <td>50.000000</td>\n",
       "      <td>25.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>32.777778</td>\n",
       "      <td>59.955414</td>\n",
       "      <td>87.775510</td>\n",
       "      <td>24.180000</td>\n",
       "      <td>86.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>3.792390</td>\n",
       "      <td>3.376662</td>\n",
       "      <td>3.508885</td>\n",
       "      <td>3.662775</td>\n",
       "      <td>3.662877</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>22.000000</td>\n",
       "      <td>51.000000</td>\n",
       "      <td>79.000000</td>\n",
       "      <td>17.000000</td>\n",
       "      <td>77.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>30.000000</td>\n",
       "      <td>58.000000</td>\n",
       "      <td>85.000000</td>\n",
       "      <td>22.000000</td>\n",
       "      <td>84.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>33.000000</td>\n",
       "      <td>59.000000</td>\n",
       "      <td>88.000000</td>\n",
       "      <td>24.500000</td>\n",
       "      <td>86.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>35.000000</td>\n",
       "      <td>62.000000</td>\n",
       "      <td>91.000000</td>\n",
       "      <td>27.000000</td>\n",
       "      <td>88.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>44.000000</td>\n",
       "      <td>68.000000</td>\n",
       "      <td>97.000000</td>\n",
       "      <td>31.000000</td>\n",
       "      <td>93.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"8\" valign=\"top\">Income</th>\n",
       "      <th>count</th>\n",
       "      <td>126.000000</td>\n",
       "      <td>157.000000</td>\n",
       "      <td>147.000000</td>\n",
       "      <td>50.000000</td>\n",
       "      <td>25.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>105265.809524</td>\n",
       "      <td>72448.063694</td>\n",
       "      <td>27866.102041</td>\n",
       "      <td>128029.120000</td>\n",
       "      <td>119944.040000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>6080.621753</td>\n",
       "      <td>6240.260008</td>\n",
       "      <td>6448.805481</td>\n",
       "      <td>5688.904656</td>\n",
       "      <td>4941.052254</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>89598.000000</td>\n",
       "      <td>56321.000000</td>\n",
       "      <td>12000.000000</td>\n",
       "      <td>117108.000000</td>\n",
       "      <td>110582.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>100760.250000</td>\n",
       "      <td>68463.000000</td>\n",
       "      <td>23361.000000</td>\n",
       "      <td>123042.000000</td>\n",
       "      <td>117347.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>106002.500000</td>\n",
       "      <td>72027.000000</td>\n",
       "      <td>27771.000000</td>\n",
       "      <td>128162.000000</td>\n",
       "      <td>119429.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>108858.750000</td>\n",
       "      <td>76594.000000</td>\n",
       "      <td>32601.000000</td>\n",
       "      <td>131435.750000</td>\n",
       "      <td>123651.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>119877.000000</td>\n",
       "      <td>90422.000000</td>\n",
       "      <td>46977.000000</td>\n",
       "      <td>142000.000000</td>\n",
       "      <td>128596.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"8\" valign=\"top\">SpendingScore</th>\n",
       "      <th>count</th>\n",
       "      <td>126.000000</td>\n",
       "      <td>157.000000</td>\n",
       "      <td>147.000000</td>\n",
       "      <td>50.000000</td>\n",
       "      <td>25.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>0.309926</td>\n",
       "      <td>0.771518</td>\n",
       "      <td>0.328800</td>\n",
       "      <td>0.896892</td>\n",
       "      <td>0.068378</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>0.045513</td>\n",
       "      <td>0.046058</td>\n",
       "      <td>0.045224</td>\n",
       "      <td>0.043466</td>\n",
       "      <td>0.039744</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>0.174120</td>\n",
       "      <td>0.657314</td>\n",
       "      <td>0.203140</td>\n",
       "      <td>0.806553</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>0.281237</td>\n",
       "      <td>0.740367</td>\n",
       "      <td>0.301502</td>\n",
       "      <td>0.871957</td>\n",
       "      <td>0.036795</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>0.309479</td>\n",
       "      <td>0.766720</td>\n",
       "      <td>0.324719</td>\n",
       "      <td>0.890676</td>\n",
       "      <td>0.063273</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>0.341096</td>\n",
       "      <td>0.800598</td>\n",
       "      <td>0.357267</td>\n",
       "      <td>0.926473</td>\n",
       "      <td>0.082723</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>0.411112</td>\n",
       "      <td>0.910417</td>\n",
       "      <td>0.473550</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.155694</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"8\" valign=\"top\">Savings</th>\n",
       "      <th>count</th>\n",
       "      <td>126.000000</td>\n",
       "      <td>157.000000</td>\n",
       "      <td>147.000000</td>\n",
       "      <td>50.000000</td>\n",
       "      <td>25.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>14962.778066</td>\n",
       "      <td>6889.972190</td>\n",
       "      <td>16659.261445</td>\n",
       "      <td>4087.520309</td>\n",
       "      <td>14808.683793</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>1061.734017</td>\n",
       "      <td>1052.276354</td>\n",
       "      <td>1183.850178</td>\n",
       "      <td>1277.754801</td>\n",
       "      <td>1159.339639</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>12207.526078</td>\n",
       "      <td>4077.658657</td>\n",
       "      <td>13470.970605</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>12554.692742</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>14223.787562</td>\n",
       "      <td>6225.376082</td>\n",
       "      <td>15957.282919</td>\n",
       "      <td>3275.320193</td>\n",
       "      <td>14047.388986</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>14976.943192</td>\n",
       "      <td>6845.056822</td>\n",
       "      <td>16711.067980</td>\n",
       "      <td>4361.967019</td>\n",
       "      <td>14773.407206</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>15682.288845</td>\n",
       "      <td>7497.231607</td>\n",
       "      <td>17433.126684</td>\n",
       "      <td>4986.863329</td>\n",
       "      <td>15391.952192</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>17968.553929</td>\n",
       "      <td>10547.775368</td>\n",
       "      <td>20000.000000</td>\n",
       "      <td>6089.478323</td>\n",
       "      <td>17833.093470</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "Clusters                         0             1             2              3  \\\n",
       "Age           count     126.000000    157.000000    147.000000      50.000000   \n",
       "              mean       32.777778     59.955414     87.775510      24.180000   \n",
       "              std         3.792390      3.376662      3.508885       3.662775   \n",
       "              min        22.000000     51.000000     79.000000      17.000000   \n",
       "              25%        30.000000     58.000000     85.000000      22.000000   \n",
       "              50%        33.000000     59.000000     88.000000      24.500000   \n",
       "              75%        35.000000     62.000000     91.000000      27.000000   \n",
       "              max        44.000000     68.000000     97.000000      31.000000   \n",
       "Income        count     126.000000    157.000000    147.000000      50.000000   \n",
       "              mean   105265.809524  72448.063694  27866.102041  128029.120000   \n",
       "              std      6080.621753   6240.260008   6448.805481    5688.904656   \n",
       "              min     89598.000000  56321.000000  12000.000000  117108.000000   \n",
       "              25%    100760.250000  68463.000000  23361.000000  123042.000000   \n",
       "              50%    106002.500000  72027.000000  27771.000000  128162.000000   \n",
       "              75%    108858.750000  76594.000000  32601.000000  131435.750000   \n",
       "              max    119877.000000  90422.000000  46977.000000  142000.000000   \n",
       "SpendingScore count     126.000000    157.000000    147.000000      50.000000   \n",
       "              mean        0.309926      0.771518      0.328800       0.896892   \n",
       "              std         0.045513      0.046058      0.045224       0.043466   \n",
       "              min         0.174120      0.657314      0.203140       0.806553   \n",
       "              25%         0.281237      0.740367      0.301502       0.871957   \n",
       "              50%         0.309479      0.766720      0.324719       0.890676   \n",
       "              75%         0.341096      0.800598      0.357267       0.926473   \n",
       "              max         0.411112      0.910417      0.473550       1.000000   \n",
       "Savings       count     126.000000    157.000000    147.000000      50.000000   \n",
       "              mean    14962.778066   6889.972190  16659.261445    4087.520309   \n",
       "              std      1061.734017   1052.276354   1183.850178    1277.754801   \n",
       "              min     12207.526078   4077.658657  13470.970605       0.000000   \n",
       "              25%     14223.787562   6225.376082  15957.282919    3275.320193   \n",
       "              50%     14976.943192   6845.056822  16711.067980    4361.967019   \n",
       "              75%     15682.288845   7497.231607  17433.126684    4986.863329   \n",
       "              max     17968.553929  10547.775368  20000.000000    6089.478323   \n",
       "\n",
       "Clusters                         4  \n",
       "Age           count      25.000000  \n",
       "              mean       86.000000  \n",
       "              std         3.662877  \n",
       "              min        77.000000  \n",
       "              25%        84.000000  \n",
       "              50%        86.000000  \n",
       "              75%        88.000000  \n",
       "              max        93.000000  \n",
       "Income        count      25.000000  \n",
       "              mean   119944.040000  \n",
       "              std      4941.052254  \n",
       "              min    110582.000000  \n",
       "              25%    117347.000000  \n",
       "              50%    119429.000000  \n",
       "              75%    123651.000000  \n",
       "              max    128596.000000  \n",
       "SpendingScore count      25.000000  \n",
       "              mean        0.068378  \n",
       "              std         0.039744  \n",
       "              min         0.000000  \n",
       "              25%         0.036795  \n",
       "              50%         0.063273  \n",
       "              75%         0.082723  \n",
       "              max         0.155694  \n",
       "Savings       count      25.000000  \n",
       "              mean    14808.683793  \n",
       "              std      1159.339639  \n",
       "              min     12554.692742  \n",
       "              25%     14047.388986  \n",
       "              50%     14773.407206  \n",
       "              75%     15391.952192  \n",
       "              max     17833.093470  "
      ]
     },
     "execution_count": 37,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_new.groupby('Clusters').describe().transpose()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
